name: Integration Test

on:
  push:
    branches:
    - CI
  pull_request:
    branches:
    - develop

jobs:
  devnet:
    # timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    # set up buildx/BuildKit runner in the context,
    # make the Docker cache exportable and thus properly cacheable
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Cache Rust - Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry
          ~/.cargo/git
          target
          kicker/cache/build
          kicker/packages/godwoken/target
        # kicker/packages
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - name: Install moleculec
      run: |
        test "$(moleculec --version)" = "Moleculec 0.6.1" \
        || CARGO_TARGET_DIR=target/ cargo install moleculec --version 0.6.1
    - name: Install Capsule
      run: |
        test "$(capsule -V)" = "Capsule 0.4.6 36d59e0" \
        || cargo install ckb-capsule \
        --git https://github.com/nervosnetwork/capsule.git \
        --tag v0.4.6

    - name: Godwoken Kicker services
      run: |
        docker-compose --version
        cd kicker
        make init
        make start
        sudo chown -R `whoami` cache/build
      # sudo chown -R `whoami` packages/godwoken/target

    # - uses: actions/setup-node@v2
    #   with:
    #     node-version: '14'
    # - name: Get yarn cache directory path
    #   id: yarn-cache-dir-path
    #   run: echo "::set-output name=dir::$(yarn cache dir)"
    # - uses: actions/cache@v2
    #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #   with:
    #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-
    # - run: yarn install
    #   working-directory: tools
    
    # - run: ENV_PATH=devnet.env yarn test:multi-sign-wallet
    #   working-directory: tools/packages/polyjuice

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 30

    # - name: Stop containers
    #   if: always()
    #   run: docker-compose -f "docker-compose.yml" down
